;                 ██╗  ██╗ █████╗ ███████╗██╗  ██╗ █████╗ 
;                 ██║  ██║██╔══██╗██╔════╝██║  ██║██╔══██╗
;                 ███████║███████║███████╗███████║███████║
;                 ██╔══██║██╔══██║╚════██║██╔══██║██╔══██║
;                 ██║  ██║██║  ██║███████║██║  ██║██║  ██║
;                 ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝
;=================|--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------|====================================|

                  format PE64 Console 5.0                                                    
                  entry Start                                           

                  include 'win64a.inc'

;                  ██████╗ ██████╗ ██████╗ ███████╗    ███████╗███████╗ ██████╗████████╗██╗ ██████╗ ███╗   ██╗
;                 ██╔════╝██╔═══██╗██╔══██╗██╔════╝    ██╔════╝██╔════╝██╔════╝╚══██╔══╝██║██╔═══██╗████╗  ██║
;                 ██║     ██║   ██║██║  ██║█████╗      ███████╗█████╗  ██║        ██║   ██║██║   ██║██╔██╗ ██║
;                 ██║     ██║   ██║██║  ██║██╔══╝      ╚════██║██╔══╝  ██║        ██║   ██║██║   ██║██║╚██╗██║
;                 ╚██████╗╚██████╔╝██████╔╝███████╗    ███████║███████╗╚██████╗   ██║   ██║╚██████╔╝██║ ╚████║
;                  ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝    ╚══════╝╚══════╝ ╚═════╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝
;=================|--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------|====================================|

                  section '.code' code readable executable
                  
                  avxCheck          equ               0x10000000                                                              ; бит наличия AVX
                  avx2Check         equ               0x18000000                                                              ; бит наличия AVX2
                  basicCPUInfo      equ               1                                                                       ; базовая информация о CPU
                  testCPUID         equ               0                                                                       ; для проверки, есть ли CPUID
                  

Start:            mov      ebp,              esp                                                                              ; удалить после отладки
                  
                  invoke   SetConsoleTitleA, conTitle                                                                         ; устанавливаем заголовок консоли                                                                                                                                                     
                  test     eax,              eax
                  jz       Exit

                  invoke   GetStdHandle, [STD_OUTP_HNDL]                                                                      ; получаем дескриптор вывода
                  mov      [hStdOut],        eax                                                                              ; сохраняем в память 
                  invoke   GetStdHandle, [STD_INP_HNDL]                                                                       ; получаем дескриптор ввода         
                  mov      [hStdIn],         eax                                                                              ; сохраняем в память 

                  invoke   WriteConsoleA, [hStdOut], mesWelcome, mlWelcome, chrsWritten, 0                                    ; выводим приветствие
                  invoke   WriteConsoleA, [hStdOut], mesInspect, mlInspect, chrsWritten, 0                                    ; ... сообщение о начале теста   
                  
                  
                  mov      eax,              testCPUID                                                                        ; проверяем наличие CPUID
                  cpuid                                                                                                       ; пытаемся вызвать инструкцию
                  jo       NoCPUID                                                                                            ; если флаг переполнения установлен
                                                                                                                              ; cpuid не поддерживается
                  mov      eax,              basicCPUInfo                                                                     ; получить базовую информацию о CPU
                  cpuid                                                                                                       ; получаем данные CPUID
  
                  ;   eax - содержит информацию о максимальном значении, которое можно передать в eax для вызова CPUID.
                  ;   ebx, ecx, edx - содержат различную информацию о процессоре, такую как модель, семейство, поддерживаемые возможности и т.д.
        
                  test     ecx,              avx2Check                                                                        ; сравниваем
                  jnz      AVXFound                                                                                           ; если бит установлен (AVX2 есть)
                  test     ecx,              avxCheck                                                                         ; сравниваем биты
                  jz       NoAVX                                                                                              ; иначе (AVX нет)
                  
AVXFound:         invoke   WriteConsoleA, [hStdOut], mesInspectOk, mlInspectOk, chrsWritten, 0                                ; сообщаем, что можно продолжать

                  jmp      Exit                                                                                               ; всё сделано. Выходим

NoCPUID:
NoAVX:            invoke   WriteConsoleA, [hStdOut], mesInspectFailed, mlInspectFailed, chrsWritten, 0                        ; выводим сообщение об ошибке


WaitingForInput:  invoke   ReadConsoleA, [hStdIn], readBuf, 1, chrsRead, 0                                                    ; ожидаем нажатия кнопки ввод

Exit:             invoke   ExitProcess, 0                                                                                     ; завершение работы

;                 ██████╗  █████╗ ████████╗ █████╗     ███████╗███████╗ ██████╗████████╗██╗ ██████╗ ███╗   ██╗
;                 ██╔══██╗██╔══██╗╚══██╔══╝██╔══██╗    ██╔════╝██╔════╝██╔════╝╚══██╔══╝██║██╔═══██╗████╗  ██║
;                 ██║  ██║███████║   ██║   ███████║    ███████╗█████╗  ██║        ██║   ██║██║   ██║██╔██╗ ██║
;                 ██║  ██║██╔══██║   ██║   ██╔══██║    ╚════██║██╔══╝  ██║        ██║   ██║██║   ██║██║╚██╗██║
;                 ██████╔╝██║  ██║   ██║   ██║  ██║    ███████║███████╗╚██████╗   ██║   ██║╚██████╔╝██║ ╚████║
;                 ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚═╝  ╚═╝    ╚══════╝╚══════╝ ╚═════╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝
;=================|--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------|====================================|

                  section '.data' data readable writeable

                  conTitle          db                'Hardware accelerated sha 2 computing', 0

                  mesWelcome        db                'Welcome to the SHA 2 computing using hardware acceleration!', 0, 0dh, 0ah
                  mlWelcome         = $-mesWelcome

                  mesInspect        db                'We are starting to inspect the available hardware:', 0, 0dh, 0ah
                  mlInspect         = $-mesInspect

                  mesInspectFailed  db                'The necessary hardware has not been found. Continuation is impossible. Press Enter', 0, 0dh, 0ah
                  mlInspectFailed   = $-mesInspectFailed

                  mesInspectOk      db                '- ok! Everything you need is on board. We continue...', 0, 0dh, 0ah
                  mlInspectOk       = $-mesInspectOk

                  hStdIn            dd                0
                  hStdOut           dd                0
                  chrsRead          dd                0
                  chrsWritten       dd                0

                  STD_INP_HNDL      dd                -10
                  STD_OUTP_HNDL     dd                -11

;                 ██████╗ ███████╗███████╗    ███████╗███████╗ ██████╗████████╗██╗ ██████╗ ███╗   ██╗
;                 ██╔══██╗██╔════╝██╔════╝    ██╔════╝██╔════╝██╔════╝╚══██╔══╝██║██╔═══██╗████╗  ██║
;                 ██████╔╝███████╗███████╗    ███████╗█████╗  ██║        ██║   ██║██║   ██║██╔██╗ ██║
;                 ██╔══██╗╚════██║╚════██║    ╚════██║██╔══╝  ██║        ██║   ██║██║   ██║██║╚██╗██║
;                 ██████╔╝███████║███████║    ███████║███████╗╚██████╗   ██║   ██║╚██████╔╝██║ ╚████║
;                 ╚═════╝ ╚══════╝╚══════╝    ╚══════╝╚══════╝ ╚═════╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝
;=================|--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------|====================================|
                                                                                   
                  section '.bss' readable writeable

                  readBuf           db                ?


;                 ██╗███╗   ███╗██████╗  ██████╗ ██████╗ ████████╗    ███████╗███████╗ ██████╗████████╗██╗ ██████╗ ███╗   ██╗
;                 ██║████╗ ████║██╔══██╗██╔═══██╗██╔══██╗╚══██╔══╝    ██╔════╝██╔════╝██╔════╝╚══██╔══╝██║██╔═══██╗████╗  ██║
;                 ██║██╔████╔██║██████╔╝██║   ██║██████╔╝   ██║       ███████╗█████╗  ██║        ██║   ██║██║   ██║██╔██╗ ██║
;                 ██║██║╚██╔╝██║██╔═══╝ ██║   ██║██╔══██╗   ██║       ╚════██║██╔══╝  ██║        ██║   ██║██║   ██║██║╚██╗██║
;                 ██║██║ ╚═╝ ██║██║     ╚██████╔╝██║  ██║   ██║       ███████║███████╗╚██████╗   ██║   ██║╚██████╔╝██║ ╚████║
;                 ╚═╝╚═╝     ╚═╝╚═╝      ╚═════╝ ╚═╝  ╚═╝   ╚═╝       ╚══════╝╚══════╝ ╚═════╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝
;=================|--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------|====================================|

                  section  '.idata' import   data     readable

                  library           kernel,           'KERNEL32.DLL'

                  import            kernel,\
                                    SetConsoleTitleA, 'SetConsoleTitleA',\
                                    GetStdHandle,     'GetStdHandle',\
                                    WriteConsoleA,    'WriteConsoleA',\
                                    ReadConsoleA,     'ReadConsoleA',\
                                    ExitProcess,      'ExitProcess'
